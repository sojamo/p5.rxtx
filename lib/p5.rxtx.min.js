var rxtx=function(e){"use strict";const t=(e,r)=>{for(const o in r)r[o]&&"object"==typeof r[o]&&!Array.isArray(r[o])?e[o]=t(e[o]||{},r[o]):e[o]=r[o];return e},r=(e,t)=>{Object.assign(e,t)},o=(e,t)=>{if(!e.includes("\n"))return void(t.readBuffer+=e);const[o,a]=e.split("\n");t.readBuffer+=o,(async e=>{try{return JSON.parse(e)}catch(e){return{id:-1,value:[],type:"error"}}})(t.readBuffer).then((e=>{if(void 0!==e.value){const{id:o,value:a}=e;t.debug.data={value:a,id:o},r(t,{value:a||[],id:o||-1}),t.fn({id:t.id,value:t.value}),t.rxtxEvent({id:t.id,value:t.value})}t.readBuffer=a||""})).catch((e=>console.log("Error parsing data:",e)))},a=async()=>{if(!("serial"in navigator))throw new Error("Web Serial API not supported.");return await navigator.serial.getPorts()},n=async()=>{try{return await navigator.serial.requestPort()}catch(e){return void console.log("Error selecting port:",e)}},s=async(e,t)=>{if(!e)return console.log("No port provided."),!1;try{await e.open({baudRate:t.baudRate});const o=new TextDecoderStream,a=(e.readable.pipeTo(o.writable),o.readable.getReader()),n=e.writable.getWriter();t.connectedPorts.push({thePort:e,reader:a,writer:n}),console.log("Serial communication established with",e.getInfo()),r(t,{connected:!0,port:e,reader:a,writer:n,io:!0})}catch(o){throw console.log("Error connecting to port:",o),c(e,t).then((()=>console.log("Resources cleaned up."))).catch(console.error),r(t,{connected:!1,port:e,reader:null,writer:null,io:!1}),new Error("Failed to connect")}return await l(t),!1},l=async e=>{try{for(;e.connected;){const{value:t,done:r}=await e.reader.read();if(r)break;t&&o(t,e)}}catch(e){throw console.log("Error during read:",e),e}finally{c(e.port,e).then((()=>console.log("Resources cleaned up."))).catch(console.error)}},c=async(e,t)=>{try{t.reader&&(await t.reader.cancel(),t.reader.releaseLock()),t.writer&&(await t.writer.close(),t.writer.releaseLock())}catch(e){console.log("Error during cleanup:",e)}},i=async e=>{if(0===(await a()).length)console.log("No previously granted ports detected, add connect button."),await d(e);else{console.log("Previously granted ports detected, wait to reconnect ..");try{await(async e=>{const t=await a();console.log("trying to reconnect to previous port(s)",t);for(const r of t)await s(r,e)})(e)}catch(t){console.log("couldn't reconnect to previously granted port(s)."),await d(e,!1)}}return e},d=async(e,t=!0)=>{const r=t?["#03a1ff","#06b004"]:["#ffa103","#666666"],o=createButton(t?"connect":"unavailable");o.position(20,20),o.style(`\n    background: ${r[0]};\n    color: #fff;\n    font-size: 16px;\n    margin: auto;\n    border: 0;\n    padding: 8px 32px;\n    border-radius: 32px;\n    transition: background 0.3s;\n  `),o.mouseOver((()=>o.style(`background: ${r[1]};`))),o.mouseOut((()=>o.style(`background: ${r[0]};`))),o.mousePressed((async()=>{e.fn=e=>{console.log("debug: "+e)};try{const t=await(async e=>{e.readBuffer="";const t=await a();let r;return r=0===t.length?await n():t.length>0?t[0]:null,await s(r,e)})(e);console.log(t),t&&o.remove()}catch(e){console.log(e.message)}}))};document.ontouchmove=e=>{e.preventDefault()};const u=e=>{if(!0===isKeyPressed){if(!1===e.isKeyPressed){if(e.isKeyPressed=!0,!e.mappedKeys.includes(key))return;switch(key){case"d":e.debug.show=!e.debug.show;break;case"f":fullscreen()||fullscreen(!0);break;case"p":e.debug.print=!e.debug.print;break;case"s":const t=`${e.image.label}_${(()=>{let e=year()+nf(month(),2)+nf(day(),2);return e+=nf(hour(),2)+nf(minute(),2)+nf(second(),2),e})()}.${e.image.format}`;console.log(`saving image ${t}`),saveCanvas(t,e.image.format);break;case"v":console.log("p5.rxtx 0.1.1 by sojamo")}}}else e.isKeyPressed=!1},g={},p=()=>g.value||[];var f,b,y;return f=window,b=g,(y=f).p5?(y.p5.prototype.windowResized=()=>{resizeCanvas(windowWidth,windowHeight)},y.p5.prototype.registerMethod("post",(()=>u(b))),y.p5.prototype.registerMethod("post",(()=>(e=>{if(void 0===e.debug)return;if(e.debug.print&&(null==e.debug.data.value?console.log("debug.print, no data present yet."):console.log(e.debug.data.value)),!e.debug.show||!e.debug.data.value)return;const t=drawingContext instanceof WebGLRenderingContext,r=e.debug.data.value,o=`Device ${e.debug.data.id}`,a=40+20*r.length+20;e.debug.layer||(e.debug.layer=createGraphics(400,a),e.debug.layer.clear());const n=e.debug.layer;n.clear(),n.noStroke(),n.fill(0,40),n.rect(0,0,400,a,16),n.push(),n.translate(20,20),n.fill(255),n.text(o,0,0),n.translate(0,20),r.forEach(((e,t)=>{let r=constrain(e,0,1);n.push(),n.translate(0,20*t),n.fill(255,40),n.rect(0,0,300,10,4),n.fill(255,200),n.rect(0,2,300*r,8,4),n.fill(255),n.text(r.toFixed(2),320,10),n.pop()})),n.pop(),push(),t&&translate(-width/2,-height/2),translate(20,20),image(e.debug.layer,0,0),pop()})(b)))):console.error("p5.js not found. Please include p5.js before this library."),e.connect=async(e,o={})=>{((e,o,a)=>{const n={debug:{data:{}},connected:!1,io:null,isKeyPressed:!1,rxtxEvent:e.rxtxEvent||(e=>{}),readBuffer:"",connectedPorts:[]};r(a,t(t({baudRate:57600,id:-1,value:[],fn:e=>{},image:{label:"rxtx",format:"jpg"},mappedKeys:["d","f","p","s","v"],debug:{print:!1,show:!1}},o),n)),i(a)})(e,o,g)},e.getValueAt=e=>{const t=p();return e>=t.length?-1:t[e]},e.getValues=p,e.isConnectionEstablished=()=>g.connected,e.isReadyToWrite=()=>null!=g.io,e.isValuesAvailable=()=>null!=g.debug.data.value,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),e}({});
//# sourceMappingURL=p5.rxtx.min.js.map
