const e=(t,r)=>{for(const a in r)r[a]&&"object"==typeof r[a]&&!Array.isArray(r[a])?t[a]=e(t[a]||{},r[a]):t[a]=r[a];return t},t=(e,t)=>{Object.assign(e,t)},r=(e,r)=>{if(!e.includes("\n"))return void(r.readBuffer+=e);const[a,o]=e.split("\n");r.readBuffer+=a,(async e=>{try{return JSON.parse(e)}catch(e){return{id:-1}}})(r.readBuffer).then((e=>{if(void 0!==e.value){const{id:a,value:o}=e;r.debug.data={value:o,id:a},t(r,{value:o||[],id:a||-1}),r.fn({id:r.id,value:r.value}),r.rxtxEvent({id:r.id,value:r.value})}r.readBuffer=o||""})).catch((e=>console.log("Error parsing data:",e)))},a=async()=>{if(!("serial"in navigator))throw new Error("Web Serial API not supported.");return await navigator.serial.getPorts()},o=async()=>{try{return await navigator.serial.requestPort()}catch(e){return void console.log("Error selecting port:",e)}},n=async(e,r)=>{if(!e)return console.log("No port provided."),!1;try{await e.open({baudRate:r.baudRate});const a=new TextDecoderStream,o=(e.readable.pipeTo(a.writable),a.readable.getReader()),n=e.writable.getWriter();return r.connectedPorts.push({thePort:e,reader:o,writer:n}),console.log("Serial communication established with",e.getInfo()),t(r,{connected:!0,port:e,reader:o,writer:n,io:!0}),await s(r),!0}catch(t){console.log("Error connecting to port:",t),c(e,r).then((()=>console.log("Resources cleaned up."))).catch(console.error)}return!1},s=async e=>{try{for(;e.connected;){const{value:t,done:a}=await e.reader.read();if(a)break;t&&r(t,e)}}catch(e){throw console.log("Error during read:",e),e}finally{c(e.port,e).then((()=>console.log("Resources cleaned up."))).catch(console.error)}},c=async(e,t)=>{try{t.reader&&(await t.reader.cancel(),t.reader.releaseLock()),t.writer&&(await t.writer.close(),t.writer.releaseLock())}catch(e){console.log("Error during cleanup:",e)}},i=async e=>{if(0===(await a()).length)console.log("No previously granted ports detected, add connect button."),await l(e);else{console.log("Previously granted ports detected, wait to reconnect ..");try{await(async e=>{const t=await a();console.log("trying to reconnect to previous ports",t);for(const r of t)await n(r,e)})(e)}catch(t){console.log("couldn't reconnect to previously granted port(s)."),await l(e)}}return e},l=async e=>{const t=createButton("connect");t.position(20,20),t.style("\n    background: #03a1ff;\n    color: #fff;\n    font-size: 16px;\n    margin: auto;\n    border: 0;\n    padding: 8px 32px;\n    border-radius: 32px;\n    transition: background 0.3s;\n  "),t.mouseOver((()=>t.style("background: #06b004;"))),t.mouseOut((()=>t.style("background: #03a1ff;"))),t.mousePressed((async()=>{e.fn=e=>{},t.remove();try{const t=await(async e=>{e.readBuffer="";const t=await a();let r;return r=0===t.length?await o():t[0],await n(r,e)})(e);t||l(e)}catch(e){console.log(e)}}))};document.ontouchmove=e=>{e.preventDefault()};const d=e=>{if(!0===isKeyPressed){if(!1===e.isKeyPressed){if(e.isKeyPressed=!0,!e.mappedKeys.includes(key))return;switch(key){case"d":e.debug.show=!e.debug.show;break;case"f":fullscreen()||fullscreen(!0);break;case"p":e.debug.print=!e.debug.print;break;case"s":const t=`${e.image.label}_${(()=>{let e=year()+nf(month(),2)+nf(day(),2);return e+=nf(hour(),2)+nf(minute(),2)+nf(second(),2),e})()}.${e.image.format}`;console.log(`saving image ${t}`),saveCanvas(t,e.image.format)}}}else e.isKeyPressed=!1},u={},g=async(r,a={})=>{((r,a,o)=>{const n={debug:{data:{}},connected:!1,io:null,isKeyPressed:!1,rxtxEvent:r.rxtxEvent||(e=>{}),readBuffer:"",connectedPorts:[]};t(o,e(e({baudRate:57600,id:-1,value:[],fn:e=>{},image:{label:"rxtx",format:"jpg"},mappedKeys:["d","f","p","s"],debug:{print:!1,show:!1}},a),n)),i(o)})(r,a,u)},p=()=>null!=u.debug.data.value,f=()=>u.connected,y=()=>null!=u.io,b=e=>{const t=w();return e>=t.length?-1:t[e]},w=()=>u.value||[];var h,v,m;h=window,v=u,(m=h).p5?(m.p5.prototype.windowResized=()=>{resizeCanvas(windowWidth,windowHeight)},m.p5.prototype.registerMethod("post",(()=>d(v))),m.p5.prototype.registerMethod("post",(()=>(e=>{if(void 0===e.debug)return;if(e.debug.print&&(null==e.debug.data.value?console.log("debug.print, no data present yet."):console.log(e.debug.data.value)),!e.debug.show||!e.debug.data.value)return;const t=drawingContext instanceof WebGLRenderingContext,r=e.debug.data.value,a=`Device ${e.debug.data.id}`,o=40+20*r.length+20;e.debug.layer||(e.debug.layer=createGraphics(400,o),e.debug.layer.clear());const n=e.debug.layer;n.clear(),n.noStroke(),n.fill(0,40),n.rect(0,0,400,o,16),n.push(),n.translate(20,20),n.fill(255),n.text(a,0,0),n.translate(0,20),r.forEach(((e,t)=>{let r=constrain(e,0,1);n.push(),n.translate(0,20*t),n.fill(255,40),n.rect(0,0,300,10,4),n.fill(255,200),n.rect(0,2,300*r,8,4),n.fill(255),n.text(r.toFixed(2),320,10),n.pop()})),n.pop(),push(),t&&translate(-width/2,-height/2),translate(20,20),image(e.debug.layer,0,0),pop()})(v)))):console.error("p5.js not found. Please include p5.js before this library.");export{g as connect,b as getValueAt,w as getValues,f as isConnectionEstablished,y as isReadyToWrite,p as isValuesAvailable};
//# sourceMappingURL=p5.rxtx.es.min.js.map
