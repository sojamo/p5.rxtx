const e=async e=>{try{return JSON.parse(e)}catch(e){return{id:-1}}},t=(e,a)=>{for(const r in a)a[r]&&"object"==typeof a[r]&&!Array.isArray(a[r])?e[r]=t(e[r]||{},a[r]):e[r]=a[r];return e},a=(...e)=>{console.log("rxtx debug : ",e.join(" "))},r=async e=>{"serial"in navigator&&navigator.serial.getPorts().then((t=>{e.readBuffer="",0==t.length?n().then((t=>{o(t,e)})):o(t[0],e)}))},n=async()=>await navigator.serial.requestPort(),o=async(e,t)=>{try{await e.open({baudRate:t.baudRate});const r=new TextDecoderStream,n=e.readable.pipeTo(r.writable),o=r.readable.getReader(),i=e.writable.getWriter();return a("Serial communication established",e.getInfo()),Object.assign(t,{connected:!0,port:e,reader:o,writer:i,io:!0}),s(t),{inputDone:n}}catch(e){throw a("Error connecting to port:",e),e}},s=async t=>{for(;;){const{value:r,done:n}=await t.reader.read();if(r)if(r.includes("\n")){const a=split(r,"\n");t.readBuffer+=a[0],e(t.readBuffer).then((e=>{if(void 0!==e.value){t.value=e.value||[],t.id=e.id||-1,t.debug.data=t;const a={id:t.id,value:t.value};t.fn(a),t.rxtxEvent(a)}t.readBuffer=1!=a.length?a[1]:""}))}else t.readBuffer+=r;if(n){a("[readLoop] DONE",n),(void 0).reader.releaseLock();break}}};document.ontouchmove=e=>{e.preventDefault()};const i=e=>{if(!0===isKeyPressed){if(!1===e.isKeyPressed)switch(e.isKeyPressed=!0,key){case"f":fullscreen()||fullscreen(!0);break;case"p":e.debug.print=!e.debug.print;break;case"d":e.debug.show=!!e.debug.show;break;case"s":let t="";t=year()+nf(month(),2)+nf(day(),2),t+=nf(hour(),2)+nf(minute(),2)+nf(second(),2);let a="";a+=e.image.label,a+="_"+t,a+="."+e.image.format,log(`saving image ${a}`),saveCanvas(a,rxtxProps.image.format)}}else e.isKeyPressed=!1},d=(e,a,n)=>{const o={debug:{data:{}},connected:!1,io:null,isKeyPressed:!1,rxtxEvent:e.rxtxEvent||(e=>{})};Object.assign(n,t(t({baudRate:57600,id:-1,value:[],fn:e=>{},image:{label:"rxtx",format:"jpg"},debug:{print:!1,show:!1}},a),o)),(e=>{const t=createButton("connect");t.position(20,20),t.style("background:#03a1ff"),t.style("color:#fff"),t.style("font-size:16px"),t.style("margin:auto"),t.style("border:0"),t.style("padding:8px 32px"),t.style("border-radius:32px"),t.style("transition:background 0.3s"),t.mouseOver((()=>{t.style("background:#06b004")})),t.mouseOut((()=>{t.style("background:#03a1ff")})),t.mousePressed((()=>{e.fn=e=>{},r(e),t.remove()}))})(n)},l=(e,t={})=>{d(e,t,b)},u=()=>null!=b.debug.data.value,c=()=>b.connected,g=()=>null!=b.io,f=e=>{const t=p();return e>=t.length?-1:t[e]},p=()=>b.value||[],b={};var y,h,v;y=window,h=b,(v=y).p5?(v.p5.prototype.windowResized=()=>{resizeCanvas(windowWidth,windowHeight)},v.p5.prototype.registerMethod("post",(()=>i(h))),v.p5.prototype.registerMethod("post",(()=>(e=>{if(e.debug.print&&(null==e.debug.data.value?a("debug.print, no data present yet."):a(e.debug.data.value)),!e.debug.show||!e.debug.data.value)return;const t=drawingContext instanceof WebGLRenderingContext;if(e.debug.layer){const t=e.debug.layer,a=e.debug.data.value,r=e.debug.data.id;t.clear(),t.noStroke(),t.fill(0,20),t.rect(0,0,400,200,16),t.push(),t.translate(20,20),t.fill(255),t.text(`Device ${r}`,0,0),t.translate(0,20),a.forEach(((e,a)=>{let r=constrain(e,0,1);t.push(),t.translate(0,20*a),t.fill(255,40),t.rect(0,0,300,10,4),t.fill(255,200),t.rect(0,2,300*r,8,4),t.fill(255),t.text(r.toFixed(2),320,10),t.pop()})),t.pop()}else e.debug.layer=createGraphics(400,200),e.debug.layer.clear();push(),t&&translate(-width/2,-height/2),translate(20,20),image(e.debug.layer,0,0),pop()})(h)))):console.error("p5.js not found. Please include p5.js before this library.");export{l as connect,f as getValueAt,p as getValues,c as isConnectionEstablished,g as isReadyToSend,u as isValuesAvailable};
//# sourceMappingURL=p5.rxtx.es.min.js.map
